FROM nvidia/cuda:8.0-cudnn7-devel-ubuntu16.04

MAINTAINER Tao Lin <itamtao@gmail.com>

# configure some environments.
RUN "sh" "-c" "echo nameserver 8.8.8.8 >> /etc/resolv.conf"

# install some good tools.
RUN apt-get update && apt-get install -y --no-install-recommends \
        sudo \
        cmake \
        build-essential \
        ca-certificates \
        curl \
        wget \
        libfreetype6-dev \
        libpng12-dev \
        libzmq3-dev \
        pkg-config \
        rsync \
        software-properties-common \
        unzip \
        zsh \
        libjpeg-dev libfreetype6-dev zlib1g-dev \
        git vim \
        locales \
        && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

RUN echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && locale-gen

# install good vim.
RUN curl http://j.mp/spf13-vim3 -L -o - | sh

# install python3.
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        python3 \
        python3-numpy \
        python3-dev \
        python3-pip \
        python3-wheel \
        python3-tk \
    && cd /usr/local/bin && ln -s /usr/bin/python3 python \
    && pip3 install --upgrade pip setuptools \
    && if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi

# install some python packages.
RUN pip --no-cache-dir install \
        ipykernel \
        jupyter \
        matplotlib \
        scipy \
        scikit-learn \
        sklearn \
        pandas \
        Pillow \
        h5py \
        autograd \
        powerlaw \
        seaborn \
        nltk \
        && \
    python -m ipykernel.kernelspec

# install pytorch
RUN git clone https://github.com/pytorch/pytorch.git /root/pytorch && cd /root/pytorch && \
    git submodule update --init && \
    pip install -r requirements.txt && \
    python setup.py install && rm -rf /root/pytorch
RUN git clone https://github.com/pytorch/vision.git && cd vision && pip install -v .

# install Tensorflow GPU Version
RUN pip --no-cache-dir install --upgrade --ignore-installed  \
    https://pypi.python.org/packages/1e/be/b72fd4690c2a557ed4a253364df8a328860851008935b84dfe47615b6eb5/tensorflow_gpu-1.3.0rc0-cp35-cp35m-manylinux1_x86_64.whl#md5=e0d732610e060191f11c085b3e189cd8

# configure user.
ENV SHELL=/bin/bash \
    NB_USER=lin \
    NB_UID=144057 \
    NB_GROUP=MLO-unit \
    NB_GID=11169
ENV HOME=/home/$NB_USER

ADD ml_prod/fix-permissions /usr/local/bin/fix-permissions
RUN chmod +x /usr/local/bin/fix-permissions
RUN groupadd $NB_GROUP -g $NB_GID
RUN useradd -m -s /bin/bash -N -u $NB_UID $NB_USER && \
    echo "${NB_USER}:${NB_USER}" | chpasswd && \
    usermod -aG sudo,adm ${NB_USER} && \
    fix-permissions $HOME


# Set up our notebook config.
COPY ml_prod/jupyter_notebook_config.py /root/.jupyter/
COPY ml_prod/run_jupyter.sh /

# TensorBoard
EXPOSE 6006
# IPython
EXPOSE 8888

############ user: user permission
USER $NB_USER
WORKDIR $HOME
